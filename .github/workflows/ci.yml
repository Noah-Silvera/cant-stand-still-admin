name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  CI: true
jobs:
  rubySetup:
    environment: test
    name: Set up Ruby
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - uses: ruby/setup-ruby@v1
      - name: Install Dependencies
        run: bundle install --deployment --path vendor/bundle
  unit_tests:
    name: Run Unit Tests
    needs: [rubySetup]
    runs-on: ubuntu-latest
    environment: test
    services:
      postgres:
        env:
          POSTGRES_PASSWORD: postgres
        image: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      PGPASSWORD: postgres
      RAILS_ENV: test
      DATABASE_URL: postgresql://postgres@localhost/test?encoding=utf8
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Install Dependencies
        run: bundle install --deployment --path vendor/bundle
      - name: Get Node Version
        id: node-version
        run: echo "::set-output name=version::$(cat .nvmrc)"
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - name: Unit Tests
        run: bundle exec rspec --exclude-pattern "spec/features/**/*_spec.rb" --tag ~rack_attack
